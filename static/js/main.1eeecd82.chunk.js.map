{"version":3,"sources":["api/api.js","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","components/LoadingError/LoadingError.jsx","App.jsx","index.js"],"names":["request","url","options","fetch","then","res","ok","Error","status","statusText","json","data","wait","delay","Promise","resolve","setTimeout","getTodos","a","getUser","selectedUserId","TodoItem","todo","selectUser","className","completed","type","readOnly","title","id","onClick","userId","TodoList","state","selectOption","handleChange","event","target","name","value","setState","filterBySelect","todos","this","props","selectedTodos","filter","onChange","map","key","React","Component","CurrentUser","user","prevProps","prevState","snapshot","deleteUser","email","phone","LoadingError","App","filteredTodos","query","selectedStatus","loading","hasLoadingError","option","loadTodos","filterHandler","e","includes","length","classnames","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1eeecd82.chunk.js","sourcesContent":["const TODO_API_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${TODO_API_URL}${url}`, options)\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status} - ${res.statusText}`);\n    }\n\n    return res.json();\n  })\n  .then(data => data.data);\n\nfunction wait(delay) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport const getTodos = async() => {\n  await wait(1000);\n\n  return request('/todos');\n};\n\nexport const getUsers = () => request('/users');\n\nexport const getUser = selectedUserId => request(`/users/${selectedUserId}`);\n\n// export const getUserTodo = (selectedUserId) => {\n//   return request(`/users/${selectedUserId}/todos`);\n// };\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({ todo, selectUser, selectedUserId }) => {\n  return (\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        <li className={`TodoList__item ${todo.completed ? 'TodoList__item--checked' : 'TodoList__item--unchecked' }`}>\n          <label>\n            <input type=\"checkbox\" readOnly />\n            <p>{todo.title}</p>\n          </label>\n\n          {selectedUserId === todo.id\n          ? ( <button\n                onClick={() => { selectUser(0) }}\n                className=\"\n                button is-link\n                {/*TodoList__user-button TodoList__user-button--selected button*/}\n                \"\n                type=\"button\">User: {todo.userId}\n              </button>)\n          : ( <button\n                onClick={() => { selectUser(todo.id) }}\n                className=\"\n                button is-info is-outlined\n                {/*TodoList__user-button TodoList__user-button--selected button/}\n                \"\n                type=\"button\">User: {todo.userId}\n              </button>\n            ) }\n\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nTodoItem.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport class TodoList extends React.Component {\n  state = {\n    selectOption: 'all',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterBySelect = (todos) => {\n    const { selectOption } = this.state;\n\n    switch (selectOption) {\n      case 'completed':\n        return todos.completed;\n\n      case 'active':\n        return !todos.completed;\n\n      default:\n        return true;\n    }\n  }\n\n  render() {\n    const { todos, selectUser, selectedUserId } = this.props;\n    const selectedTodos = todos.filter(this.filterBySelect);\n\n    return (\n      <div className=\"TodoList\">\n\n        <div className=\"select\">\n          <select\n            value={this.selectOption}\n            onChange={this.handleChange}\n            name=\"selectOption\"\n            id=\"selectOption\"\n          >\n            <option value=\"\">take a choose</option>\n            <option value=\"all\">all</option>\n            <option value=\"active\">active</option>\n            <option value=\"completed\">completed</option>\n          </select>\n        </div>\n\n        <h2>Todos:</h2>\n        {selectedTodos && selectedTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            selectUser={selectUser}\n            selectedUserId={selectedUserId}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","/* eslint-disable */\nimport React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: [],\n  };\n\n  async componentDidMount() {\n    const user = await getUser(this.props.userId);\n    this.setState({ user });\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.userId !== this.props.userId) {\n      const user = await getUser(this.props.userId);\n      if (user.name === null) {\n        return <p>Loading profile...</p>;\n      } else {\n        return this.setState({ user });\n      }\n    }\n  }\n\n  render() {\n    const { deleteUser } = this.props;\n    const { user } = this.state;\n\n    return (\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\"><span>Selected user: {this.props.userId}</span></h2>\n\n          <h3 className=\"CurrentUser__name\">{!user.name ? '' : user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n        </div>\n        <button\n          onClick={deleteUser}\n          type=\"button\"\n          className=\"button is-link\"\n        >\n          Clear\n        </button>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './LoadingError.css';\n\nexport const LoadingError = () => (\n  <div className=\"block\">\n    An error occurred when\n    <strong>loading</strong>\n    todos...\n  </div>\n);\n","/* eslint-disable */\nimport React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport 'bulma/css/bulma.css';\nimport classnames from 'classnames';\nimport { getTodos } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { LoadingError } from './components/LoadingError/LoadingError';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    selectedUserId: 0,\n    query: '',\n    selectedStatus: '',\n    loading: false,\n    hasLoadingError: false,\n    option: '',\n  };\n\n  loadTodos = async() => {\n    this.setState({\n      loading: true,\n      hasLoadingError: false,\n    });\n\n    try {\n      const todos = await getTodos()\n      this.setState({\n        todos: todos,\n      });\n    } catch (error) {\n      this.setState({\n        hasLoadingError: true,\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { query, todos } = this.state;\n    if (prevState.query !== query) {\n      const filteredTodos = todos\n        .filter(todo => {\n          if (todo.title === null) {\n            return false;\n          } else {\n          return todo.title.includes(query);\n          }\n        });\n\n        this.setState({\n        filteredTodos,\n      })\n    }\n  }\n\n  filterHandler = (e) => {\n    this.setState({\n      query: e.target.value\n    });\n  }\n\n  deleteUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId, filteredTodos, loading, hasLoadingError } = this.state;\n    return (\n      <>\n        <div className=\"App\">\n          <div className=\"App__sidebar\">\n\n            {todos.length === 0 ? (\n              <button\n                className={classnames('button', 'is-link', { 'is-loading': loading })}\n                onClick={this.loadTodos}\n                type=\"button\"\n              >\n                load todos\n              </button>\n            ) : (\n              <>\n                <div>\n                  <input\n                    value={this.state.query}\n                    onChange={this.filterHandler}\n                    className=\"input is-rounded\"\n                    type=\"text\"\n                    placeholder=\"Primary input\"\n                  />\n                </div>\n\n                <TodoList\n                  todos={filteredTodos.length > 0\n                    ? filteredTodos\n                    : todos}\n                  selectedUserId={selectedUserId}\n                  selectUser={(selectedUserId) => {\n                    this.setState({ selectedUserId });\n                  }}/>\n              </>\n            )}\n\n          </div>\n          <div className=\"App__content\">\n            <div className=\"App__content-container\">\n\n              {selectedUserId\n                ? ( <CurrentUser\n                      deleteUser={this.deleteUser}\n                      userId={selectedUserId}\n                    />)\n                : 'No user selected'}\n            </div>\n          </div>\n\n        </div>\n        {hasLoadingError && <LoadingError />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}